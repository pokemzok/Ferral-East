[gd_scene load_steps=6 format=3 uid="uid://cp4uapunwa8i1"]

[ext_resource type="PackedScene" uid="uid://djcsnso72bwod" path="res://menu/main/main_menu.tscn" id="1_iv2hg"]
[ext_resource type="PackedScene" uid="uid://d4jon5ago286d" path="res://menu/death/death_menu.tscn" id="2_fckys"]
[ext_resource type="PackedScene" uid="uid://cgjvc8fmlnolf" path="res://level/loading-screen.tscn" id="3_eks8k"]
[ext_resource type="PackedScene" uid="uid://bhfp2m5ktia7t" path="res://dialogs/dialogic/dialogic_wrapper.tscn" id="4_xeq7e"]

[sub_resource type="GDScript" id="GDScript_3slsy"]
script/source = "extends Node

var current_level_instance
var current_level_resource: SingleResource
var shop_level_instance
var shop_level_resource: SingleResource
var player_ready_for_shop_level = false
var shop_transition_delay = NumericAttribute.new(0, 0.5)
var menu_music_resources_group: ResourcesGroup
var death_menu_music_resources_group: ResourcesGroup
var sound_manager = GameSoundManager.get_instance()
var level_manager = LevelManager.get_instance()
var shop_transition_tween: Tween

@onready var menu = $MainMenu
@onready var death_menu = $DeathMenu
@onready var loading_screen = $LoadingScreen
@onready var music_player = $MusicPlayer
@onready var dialogic_wrapper = $DialogicWrapper
@onready var shop_transition_canvas = $ShopTransitionCanvas
@onready var shop_transition_color_rect = $ShopTransitionCanvas/ColorRect

var shop_transition_color: Color
var shop_transition_color_transparent: Color

func _ready():
	TranslationServer.set_locale(\"en\")
	init_shop_transition()
	death_menu.hide()
	load_menu_music()
	connect_events()

func init_shop_transition():
	shop_transition_color_transparent = Color(shop_transition_color_rect.modulate, 0)
	shop_transition_color = Color(shop_transition_color_rect.modulate, 1)
	shop_transition_color_rect.modulate.a = 0
	
func connect_events():
	GlobalEventBus.connect(GlobalEventBus.START_BUTTON_PRESSED, on_start)
	GlobalEventBus.connect(GlobalEventBus.RESUME_BUTTON_PRESSED, on_menu_toggle)
	GlobalEventBus.connect(GlobalEventBus.PLAYER_DEATH, on_player_death)
	GlobalEventBus.connect(GlobalEventBus.RESTART_BUTTON_PRESSED, on_restart)
	GlobalEventBus.connect(GlobalEventBus.QUIT_TO_MENU_BUTTON_PRESSED, on_quit_to_menu)
	GlobalEventBus.connect(GlobalEventBus.PLAYER_ENTERS_SHOP, on_player_enters_shop)
	GlobalEventBus.connect(GlobalEventBus.PLAYER_TELEPORTED, on_player_teleported)
	GlobalEventBus.connect(GlobalEventBus.PLAYER_LEFT_SHOP, on_player_left_shop)

func load_menu_music():
	var menu_loops_keys = sound_manager.rest_music_loops_keys
	var death_menu_loops_keys = sound_manager.game_over_loops_keys
	menu_music_resources_group = ResourcesGroup.new(menu_loops_keys, sound_manager.music_res)
	death_menu_music_resources_group = ResourcesGroup.new(death_menu_loops_keys, sound_manager.music_res)
	loading_screen.show()
	
func _process(delta):
	if (shop_level_instance == null && shop_level_resource != null):
		on_shop_loading(delta)
	elif (loading_screen.visible):
		on_resource_loading()
	elif(!death_menu.visible):
		on_keyboard_pressed()
	if(menu.visible && current_level_instance == null):
		play_menu_music(menu_music_resources_group.get_loaded_resources())
	elif (death_menu.visible):
		play_menu_music(death_menu_music_resources_group.get_loaded_resources())	
	else:
		stop_menu_music()	

func on_player_teleported():
	player_ready_for_shop_level = true
	shop_transition_delay.assign_max_on_less_or_zero()

func on_shop_loading(delta):
	if(shop_level_resource.is_loaded() && player_ready_for_shop_level &&  shop_transition_delay.is_lte_zero()):
		show_shop_transition()		
		var shop_resource = shop_level_resource.get_loaded_resource()
		shop_level_instance = shop_resource.instantiate()
	else:
		shop_level_resource.load_resource()
		shop_transition_delay.decrement_by(delta)			

func show_shop_transition():
	if(shop_transition_tween != null):
		shop_transition_tween.kill()
	shop_transition_canvas.show()	
	shop_transition_tween = create_tween()
	shop_transition_tween.tween_property(shop_transition_color_rect, \"modulate\", shop_transition_color, 0.5)
	shop_transition_tween.tween_callback(on_shop_transition)
	shop_transition_tween.tween_property(shop_transition_color_rect, \"modulate\", shop_transition_color_transparent, 0.5)
	shop_transition_tween.tween_callback(on_shop_transition_complete)
	
func on_shop_transition():
	current_level_instance.hide()	
	shop_transition_canvas.add_sibling(shop_level_instance)	

func on_shop_transition_complete():
	shop_transition_canvas.hide()
	dialogic_wrapper.show_dialogs()
		
func on_resource_loading():
	if(current_level_resource == null):
		on_menus_music_loading()	
	else:
		on_level_loading()

func on_level_loading():
	if( current_level_instance == null && current_level_resource.is_loaded()):
		var level = current_level_resource.get_loaded_resource()
		current_level_instance = level.instantiate()
		add_child(current_level_instance)
		loading_screen.hide()	
	else:
		current_level_resource.load_resource()		

func on_menus_music_loading():
	if (menu_music_resources_group.is_group_loaded() && death_menu_music_resources_group.is_group_loaded()):
		loading_screen.hide()
	else:
		death_menu_music_resources_group.load_resource_group()
		menu_music_resources_group.load_resource_group()		

func play_menu_music(music_collection: ArrayCollection):
	if(!music_player.is_playing() && music_collection.size() > 0):
		music_player.stream = music_collection.random_element() 
		music_player.play()

func stop_menu_music():
	music_player.stop()
	
func on_keyboard_pressed():
	if Input.is_action_just_pressed(\"show_or_hide_menu\"):
		on_menu_toggle()

func on_menu_toggle():
	var is_menu_visible = menu.toggle()
	get_tree().paused = is_menu_visible
	dialogic_wrapper.toggle_dialogs()
	
func on_start():
	get_tree().paused = false	
	menu.hide()
	current_level_resource = SingleResource.new(level_manager.Levels.TEST, level_manager.level_paths)
	loading_screen.show()
	dialogic_wrapper.clear()

func on_restart():
	clean_up_after_player_death()
	on_start()

func on_quit_to_menu():
	clean_up_after_player_death()
	menu.reset()
	menu.show()	
	stop_menu_music()
	current_level_instance.destroy()

func clean_up_after_player_death():
	current_level_instance.destroy()
	death_menu.hide()
	
func on_player_death():
	death_menu.show()
	get_tree().paused = true

func on_player_enters_shop(shop_level: LevelManager.Levels):
	if(shop_level_resource == null):
		shop_level_resource = SingleResource.new(shop_level, level_manager.level_paths)
		dialogic_wrapper.hide_dialogs()

func on_player_left_shop():
	if (shop_level_instance != null):
		shop_level_instance.hide()
		remove_child(shop_level_instance)
		current_level_instance.show()
	shop_level_resource = null	
	shop_level_instance = null	
	player_ready_for_shop_level = false
"

[node name="Game" type="Node"]
process_mode = 3
script = SubResource("GDScript_3slsy")

[node name="MainMenu" parent="." instance=ExtResource("1_iv2hg")]

[node name="LoadingScreen" parent="." instance=ExtResource("3_eks8k")]
visible = false

[node name="MusicPlayer" type="AudioStreamPlayer" parent="."]
bus = &"Music"

[node name="DeathMenu" parent="." instance=ExtResource("2_fckys")]
visible = false

[node name="DeathMenu" parent="DeathMenu" instance=ExtResource("2_fckys")]
visible = false

[node name="DialogicWrapper" parent="." instance=ExtResource("4_xeq7e")]

[node name="ShopTransitionCanvas" type="CanvasLayer" parent="."]
visible = false

[node name="ColorRect" type="ColorRect" parent="ShopTransitionCanvas"]
offset_right = 1923.0
offset_bottom = 1083.0
color = Color(0.67451, 0.0666667, 0.807843, 1)
